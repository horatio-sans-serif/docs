<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ continuous-delivery</title><link>/tags/continuous-delivery/</link><description>Recent content in continuous-delivery on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/continuous-delivery/index.xml" rel="self" type="application/rss+xml"/><item><title>Ci: CircleCI</title><link>/ci/circle-ci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ci/circle-ci/</guid><description>
&lt;p>This guide describes how to start and use LocalStack in your CircleCI pipelines.&lt;/p>
&lt;h2 id="the-localstack-circle-ci-orb">The LocalStack Circle CI Orb&lt;/h2>
&lt;p>LocalStack is an official partner of &lt;a href="https://circleci.com/">Circle CI&lt;/a> and can easily be integrated into your pipeline by using the &lt;a href="https://circleci.com/developer/orbs/orb/localstack/platform">official CircleCI Orb&lt;/a>.&lt;br>
The &lt;a href="https://circleci.com/developer/orbs/orb/localstack/platform">Orb&amp;rsquo;s documentation&lt;/a> features examples, as well as a description of the available commands.&lt;/p>
&lt;p>When using the official CircleCI Orb, using LocalStack in your pipeline is as easy as adding the Orb to your pipeline and executing the startup command.&lt;br>
The following example CircleCI config (&lt;code>.circleci/config.yml&lt;/code>) starts LocalStack, creates a new S3 bucket, and prints a nice message in the end:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2.1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">orbs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/platform@1.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run-integration-tests&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">executor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">localstack/startup&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">command&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">awslocal s3 mb s3://test-bucket&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">command&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;Execute your tests here :)&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">workflows&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">integration-test&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">run-integration-tests&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="activate-localstack-pro">Activate LocalStack Pro&lt;/h2>
&lt;p>You can easily enable LocalStack Pro by adding your API key to the project&amp;rsquo;s environment variables. The LocalStack Orb will automatically pick it up and activate the Pro features.&lt;/p>
&lt;p>Just go to the project settings in CircleCI, click on &lt;code>Environment Variables&lt;/code> in the sidebar and add your API key:&lt;/p>
&lt;p>&lt;img src="circleci-env-config.png" alt="Adding the LocalStack API key in CircleCI">&lt;/p>
&lt;h2 id="ran-into-trouble">Ran into trouble?&lt;/h2>
&lt;p>If you run into any issues or problems while integrating LocalStack with CircleCI, please &lt;a href="https://github.com/localstack/ci-plugin-circleci/issues">submit an issue&lt;/a>.&lt;/p></description></item><item><title>Integrations: AWS Copilot CLI</title><link>/integrations/copilot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/integrations/copilot/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The AWS Copilot CLI is a command line tool for developer, to release and operate containerized applications using the AWS services ECS, Fargate and App runner.
Copilot CLI makes it very simple to deploy your application, without the need for manual configuration of the mentioned services.&lt;/p>
&lt;h2 id="copilot-local">Copilot Local&lt;/h2>
&lt;p>&lt;code>copilotlocal&lt;/code> is a &lt;a href="https://github.com/localstack/copilot-cli-local">fork of AWS Copilot CLI&lt;/a>, where the endpoints for all services are redirected to &lt;code>http://localhost:4566&lt;/code>.
Using &lt;code>copilotlocal&lt;/code> instead of &lt;code>copilot&lt;/code> in your command line therefore ensures the deployment of your service on LocalStack instead of AWS.&lt;/p>
&lt;h3 id="download--installation">Download / Installation&lt;/h3>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">&lt;li class="nav-item">
&lt;a class="nav-link active tab-Linux-AMD64"
id="tabs-0-0-tab" data-toggle="tab" href="#tabs-0-0" role="tab" onclick="handleClick(&amp;#34;Linux-AMD64&amp;#34;);"
aria-controls="tabs-0-0" aria-selected="true">
Linux AMD64
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Linux-ARM64"
id="tabs-0-1-tab" data-toggle="tab" href="#tabs-0-1" role="tab" onclick="handleClick(&amp;#34;Linux-ARM64&amp;#34;);"
aria-controls="tabs-0-1" aria-selected="false">
Linux ARM64
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Mac-OS"
id="tabs-0-2-tab" data-toggle="tab" href="#tabs-0-2" role="tab" onclick="handleClick(&amp;#34;Mac-OS&amp;#34;);"
aria-controls="tabs-0-2" aria-selected="false">
Mac OS
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link tab-Windows-Powershell"
id="tabs-0-3-tab" data-toggle="tab" href="#tabs-0-3" role="tab" onclick="handleClick(&amp;#34;Windows-Powershell&amp;#34;);"
aria-controls="tabs-0-3" aria-selected="false">
Windows Powershell
&lt;/a>
&lt;/li>&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">&lt;div class="tab-pane fade show active"
id="tabs-0-0" role="tabpanel" aria-labelled-by="tabs-0-0-tab">&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -Lo copilotlocal https://github.com/localstack/copilot-cli/raw/localstack-builds/build/linux-amd64/copilotlocal &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> chmod +x copilotlocal
&lt;span style="color:#8f5902;font-style:italic"># if you want to have copilotlocal in your $PATH, move the executable e.g. to /usr/local/bin/&lt;/span>
sudo mv copilotlocal /usr/local/bin/&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-0-1" role="tabpanel" aria-labelled-by="tabs-0-1-tab">&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -Lo copilotlocal https://github.com/localstack/copilot-cli/raw/localstack-builds/build/linux-arm64/copilotlocal &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> chmod +x copilotlocal
&lt;span style="color:#8f5902;font-style:italic"># if you want to have copilotlocal in your $PATH, move the executable e.g. to /usr/local/bin/&lt;/span>
sudo mv copilotlocal /usr/local/bin/&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-0-2" role="tabpanel" aria-labelled-by="tabs-0-2-tab">&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -Lo copilotlocal https://github.com/localstack/copilot-cli/raw/localstack-builds/build/macos-darwin/copilotlocal &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> chmod +x copilotlocal
&lt;span style="color:#8f5902;font-style:italic"># if you want to have copilotlocal in your $PATH, move the executable e.g. to /usr/local/bin/&lt;/span>
sudo mv copilotlocal /usr/local/bin/&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-0-3" role="tabpanel" aria-labelled-by="tabs-0-3-tab">&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="color:#204a87">Invoke-WebRequest&lt;/span> &lt;span style="color:#000">-Uri&lt;/span> &lt;span style="color:#000">https&lt;/span>&lt;span style="color:#a40000">:&lt;/span>&lt;span style="color:#000;font-weight:bold">//&lt;/span>&lt;span style="color:#000">github&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">com&lt;/span>&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#000">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#204a87">copilot-cli&lt;/span>&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#000">raw&lt;/span>&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#204a87">localstack-builds&lt;/span>&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#000">build&lt;/span>&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#000">windows&lt;/span>&lt;span style="color:#000;font-weight:bold">/&lt;/span>&lt;span style="color:#000">copilotlocal&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">exe&lt;/span> &lt;span style="color:#000">-OutFile&lt;/span> &lt;span style="color:#000">copilotlocal&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">exe&lt;/span> &lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;/div>
&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;ul>
&lt;li>&lt;code>LOCALSTACK_HOSTNAME&lt;/code>: Target hostname under which LocalStack endpoints are available (default: &lt;code>localhost.localstack.cloud&lt;/code>)&lt;/li>
&lt;li>&lt;code>EDGE_PORT&lt;/code>: Target port under which LocalStack endpoints are available (default: &lt;code>4566&lt;/code>)&lt;/li>
&lt;li>&lt;code>LOCALSTACK_DISABLE&lt;/code>: Optional flag to disable the local endpoints and use the default behavior of &lt;code>copilot&lt;/code> (set to &lt;code>1&lt;/code> or &lt;code>true&lt;/code> to enable)&lt;/li>
&lt;/ul>
&lt;h3 id="usage">Usage&lt;/h3>
&lt;p>&lt;code>copilotlocal&lt;/code> can be used as a drop-in replacement for &lt;code>copilot&lt;/code>.
You can execute any &lt;code>copilot&lt;/code> command as &lt;code>copilotlocal&lt;/code> to run your intended action against LocalStack instead of AWS.&lt;/p>
&lt;p>To deploy your init your copilot environment, execute the following command in your project folder:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">copilotlocal init
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For more information about how to use the AWS Copilot CLI, checkout the &lt;a href="https://aws.github.io/copilot-cli/docs/overview/">copilot documentation&lt;/a>.
Just remember to replace &lt;code>copilot&lt;/code> with &lt;code>copilotlocal&lt;/code>.&lt;/p></description></item><item><title>Ci: GitHub Actions</title><link>/ci/github-actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ci/github-actions/</guid><description>
&lt;p>This guide shows you how to start LocalStack in a Github Actions job.&lt;/p>
&lt;h2 id="setting-up-your-github-actions-job">Setting up your Github Actions job&lt;/h2>
&lt;p>In order to start LocalStack, we recommend to start it in a separate &lt;a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#steps" title="GitHub Action Build Steps">build step&lt;/a>, to separate its log output / status from the rest of your job.&lt;/p>
&lt;p>We recommend taking the following steps:&lt;/p>
&lt;ul>
&lt;li>Install the LocalStack CLI (and maybe also &lt;code>awslocal&lt;/code>).&lt;/li>
&lt;li>Make sure your LocalStack docker image is up-to-date by pulling the latest version.&lt;/li>
&lt;li>Use the LocalStack CLI to start LocalStack. Make sure to use the &lt;code>DOCKER_FLAGS='-d'&lt;/code> to start the LocalStack docker container in detached mode.&lt;/li>
&lt;li>Wait for the container to report that it is up and running.&lt;/li>
&lt;/ul>
&lt;p>An official GitHub action for this also planned, to make the configuration easier and less verbose.&lt;/p>
&lt;p>The following example can be integrated into your GitHub workflow.
As an example, it will use awslocal to create bucket and list it afterwards.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack-action-example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">push&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">example-job&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Start LocalStack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCALSTACK_API_KEY&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ secrets.LOCALSTACK_API_KEY }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> # install LocalStack cli and awslocal
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> pip install localstack awscli-local[ver1]
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> # Make sure to pull the latest version of the image
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> docker pull localstack/localstack
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> # Start LocalStack
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> DOCKER_FLAGS=&amp;#39;-d&amp;#39; localstack start
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> # Wait for the LocalStack docker container to become ready
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> echo &amp;#34;Waiting for LocalStack startup...&amp;#34;
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> for i in {1..45}; do if [ `docker logs localstack_main | grep &amp;#39;Ready.&amp;#39;` ]; then break; fi; sleep 1; done
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> echo &amp;#34;Startup complete&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Run some Tests against LocalStack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> awslocal s3 mb s3://test
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> awslocal s3 ls
&lt;/span>&lt;span style="color:#8f5902;font-style:italic"> echo &amp;#34;Test Execution complete!&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to add further configuration for LocalStack, you can use the &lt;code>env&lt;/code> section of your build step to set the configuration variables as described &lt;a href="https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobsjob_idstepsenv" title="GitHub Action Steps - Environment variables">here&lt;/a>.&lt;/p>
&lt;h2 id="activating-localstack-pro">Activating LocalStack Pro&lt;/h2>
&lt;p>If you want to use LocalStack Pro in your GitHub Actions job, you should use a &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets" title="GitHub Encrypted Secrets">Github Encrypted Secret&lt;/a> to store your API key securely.
In the above example, you can see us setting the &lt;code>LOCALSTACK_API_KEY&lt;/code> environment variable to the value of the secret &lt;code>LOCALSTACK_API_KEY&lt;/code>.&lt;/p>
&lt;p>You can set your secret at an environment, repository or organization level, for more information see &lt;a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets" title="GitHub Encrypted Secrets">here&lt;/a>.
In the simplest case, you just set it at the repository level.
For this, you go, in your repository, to Settings =&amp;gt; Secrets and press &amp;ldquo;New Repository Secret&amp;rdquo;.&lt;/p>
&lt;p>There, you create the secret for your API key like in the following image, replacing &lt;code>foobar&lt;/code> with your API key.&lt;/p>
&lt;p>&lt;img src="github-create-secret.png" alt="Adding the LocalStack API key as secret in GitHub">&lt;/p></description></item><item><title>Ci: Travis CI</title><link>/ci/travis-ci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/ci/travis-ci/</guid><description>
&lt;p>This guide shows how to start and use LocalStack in your Travis CI jobs.&lt;/p>
&lt;h2 id="setting-up-the-travis-ci-job">Setting up the Travis CI job&lt;/h2>
&lt;p>When you want to integrate LocalStack into your job configuration, you just have to execute the following steps:&lt;/p>
&lt;ul>
&lt;li>Install the LocalStack CLI (and maybe also &lt;code>awslocal&lt;/code>).&lt;/li>
&lt;li>Make sure your LocalStack docker image is up-to-date by pulling the latest version.&lt;/li>
&lt;li>Use the LocalStack CLI to start LocalStack. Make sure to use the &lt;code>DOCKER_FLAGS='-d'&lt;/code> to start the LocalStack docker container in detached mode.&lt;/li>
&lt;li>Wait for the container to report that it is up and running.&lt;/li>
&lt;/ul>
&lt;p>The following example Travis CI job config (&lt;code>.travis.yaml&lt;/code>) executes these steps, creates a new S3 bucket, and prints a nice message in the end:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">language&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">python&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">docker&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">python&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;3.8&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">before_install&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Install the LocalStack CLI and awslocal&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">python -m pip install localstack awscli-local[ver1]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Make sure to pull the latest version of the image&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">docker pull localstack/localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Start localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DOCKER_FLAGS=&amp;#39;-d&amp;#39; localstack start&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Wait for the localstack docker container to become ready&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">for i in {1..45}; do if [ `docker logs localstack_main | grep &amp;#39;Ready.&amp;#39;` ]; then break; fi; sleep 1; done&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">script&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Test LocalStack by creating a new S3 bucket (and verify that it has been created by listing all buckets)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">awslocal s3 mb s3://test&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">awslocal s3 ls&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">echo &amp;#34;Execute your tests here :)&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="activate-localstack-pro">Activate LocalStack Pro&lt;/h2>
&lt;p>You can easily enable LocalStack Pro by adding your API key to the project&amp;rsquo;s environment variables. The LocalStack CLI will automatically pick it up and activate the Pro features.&lt;/p>
&lt;p>Just go to the project settings in Travis CI (&lt;code>More options&lt;/code> â†’ &lt;code>Settings&lt;/code>), scroll down to the &lt;code>Environment Variables&lt;/code> section, and add your API key:&lt;/p>
&lt;p>&lt;img src="travis-ci-env-config.png" alt="Adding the LocalStack API key in Travis CI">&lt;/p></description></item></channel></rss>